name: Node.js CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  # Backend Build and Test
  backend_build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]  # Matrix for different Node.js versions

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Cache Node.js modules for backend
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ matrix.node-version }}-backend-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-node-${{ matrix.node-version }}-backend-

      - name: Install backend dependencies
        run: |
          cd backend
          npm install

      - name: Run backend tests
        run: |
          cd backend
          npm run test

  # Frontend Build and Test
  frontend_build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]  # Matrix for different Node.js versions

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Cache Node.js modules for frontend
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ matrix.node-version }}-frontend-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-node-${{ matrix.node-version }}-frontend-

      - name: Install frontend dependencies
        run: |
          cd frontend
          npm install

      - name: Run frontend tests
        run: |
          cd frontend
          npm run test

  # Deploy Backend
  deploy_backend:
    runs-on: ubuntu-latest
    needs: [backend_build, frontend_build]  # Ensure backend build and tests run before deploy
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'  # Adjust this to your required Node.js version

      - name: Install Railway CLI
        run: |
          npm install -g @railway/cli  # Install the new Railway CLI globally

      - name: Deploy Backend to Railway
        env:
          RAILWAY_API_TOKEN: ${{ secrets.RAILWAY_API_TOKEN }}  # Use GitHub secrets for sensitive data
        run: |
          cd backend
          railway up  # Deploy the backend using Railway CLI

  # Deploy Frontend
  deploy_frontend:
    runs-on: ubuntu-latest
    needs: [backend_build, frontend_build]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install Dependencies
        run: |
          cd frontend
          npm install  # Install all dependencies

      - name: Install Netlify CLI
        run: |
          npm install -g netlify-cli  # Install the Netlify CLI globally

      - name: Build and Deploy Frontend
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}  # Use the secret for authentication
          NETLIFY_SITE_ID: a76413ba-64fe-4d88-bdaf-c8b3b714ed3b  # Your Site ID
        run: |
          cd frontend
          npm run build  # Build the Vue.js application
          netlify deploy --prod --site $NETLIFY_SITE_ID --dir dist  # Deploy to production using the site ID and authenticated with the token in the environment
